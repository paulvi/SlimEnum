<idea-plugin>
  <id>org.unirail.SlimEnum</id>
  <name>SlimEnum</name>
  <version>1.0</version>
  <vendor email="info@unirail.org" url="http://www.unirail.org">Chikirev Sirguy, Unirail Group</vendor>

  <description><![CDATA[
      <h3><a href="https://github.com/cheblin/SlimEnum">SlimEnum</a></h3> - it's the enum as we know it, <a href="https://youtu.be/Hzs6OBcvNQE">fat-free alternative</a> to the Java enums.
      It's utilize annotation declaration to provide required enum
      functionality for any, even primitive(byte,int..etc.), data types.
<br>
      <h3>Declare it (can be nested).</h3>
<pre>
public @interface Font {
    @interface Foreground {
        int     BLACK = 0,
            RED = 1,
            GREEN = 2,
            YELLOW = 3,
            BLUE = 4,
            MAGENTA = 5,
            CYAN = 6,
            WHITE = 7,
            DEFAULT = 8;
    }

    @interface Background {
        int     BLACK = 0,
            RED = 1,
            GREEN = 2,
            YELLOW = 3,
            BLUE = 4,
            MAGENTA = 5,
            CYAN = 6,
            WHITE = 7,
            DEFAULT = 8,
            TRANSPARENT = 0;
    }

    byte    NORMAL = 0,
        BOLD = 1,
        UNDERLINE = 3,
        BLINK = 4,
        INVERSE = 5,
        STRIKE = 6;

    String  Helvetica = "Helvetica",
        Palatino = "Palatino",
        HonMincho = "HonMincho",
        Serif = "Serif",
        Monospaced = "Monospaced",
        Dialog = "Dialog";
}
</pre>
<h3>apply it to variables, fields, methods return type and method arguments</h3>
<pre>
class Test {
	@Font String name;
	@Font.Foreground int fg;

	@Font.Background int setBackground(@Font.Background int bg) {
		return bg;
	}
}

static void createFont(@Font String name, @Font byte style, @Font.Background int background, @Font.Foreground int foregraund) {
}
</pre>
<h3>and use it</h3>
<pre>
createFont(Font.Monospaced + Font.HonMincho + Font.Serif, Font.BLINK, Font.Background.CYAN, Font.Foreground.BLACK);
@Font String         name = Font.Dialog;
@Font byte           type = Font.NORMAL | Font.BOLD | Font.INVERSE;
@Font.Foreground int fg   = Font.Foreground.BLUE;

Test test = new Test();
test.setBackground(Font.Background.BLUE);
test.fg = Font.Foreground.BLUE | Font.Foreground.CYAN | Font.Foreground.MAGENTA;

test.fg = Font.Foreground.BLUE;

if (type == (Font.NORMAL | Font.BOLD | Font.INVERSE | Font.BLINK) && test.setBackground(Font.Background.BLUE) == Font.Background.RED)
{
    @Font.Foreground int fgw = 3;
}
assert (test.setBackground(Font.Background.BLUE) == (Font.Background.CYAN | Font.Background.DEFAULT));

if (test.fg == Font.NORMAL && test.fg != Font.NORMAL) {

}

switch (test.setBackground(Font.Background.BLUE))
{
    case Font.Background.BLUE:
        break;
    case Font.Background.CYAN:
        break;
}
</pre>
SlimEnum plugin recognize applied to variables annotation, data type, and provide correct constants set for the code completion.
      It was created as part of generated by the <a href="https://github.com/cheblin/BlackBox">BlackBox</a> java source code.
      <a href="https://github.com/cheblin/BlackBox">BlackBox</a> is a low level binary protocol boilerplate multilanguage ( JAVA, C, C#...SWIFT(upcoming)) code generator. This plugin bring support SlimEnum to the IDE and
      make using it easy and efficiently.
      <a href="https://github.com/cheblin/SlimEnum/issues">Issues, new feature requests...</a>
    ]]></description>

  <change-notes><![CDATA[

    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="141"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <extensions defaultExtensionNs="com.intellij">
    <!-- Add your extensions here -->
    <completion.contributor language="JAVA"    implementationClass="org.unirail.SlimEnum.SlimEnumCompelition"/>
  </extensions>

  <actions>
    <!-- Add your actions here -->
  </actions>

</idea-plugin>